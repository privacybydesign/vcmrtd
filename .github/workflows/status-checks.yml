# Workflow to check whether changes in a pull request fulfill all requirements.
# We execute build stages in separate jobs to prevent artifact duplication.
name: Status checks

on:
  pull_request:
  schedule:
    # Run every sunday at noon. The weekly run ensures that cached resources don't expire.
    - cron: "0 12 * * 0"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # We make sure that lint succeeds before we start any other job to
  # prevent that the setup-build-environment action runs in parallel.
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup-build-environment
      - run: bundle exec fastlane lint
  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup-build-environment
      - run: bundle exec fastlane unit_test
  build-prototypes-android:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup build environment
        uses: ./.github/actions/setup-build-environment
      - run: flutter build apk --flavor alpha -t lib/main_prototypes.dart
      - uses: actions/upload-artifact@v4
        with:
          name: prototypes-alpha-android
          path: ./build/app/outputs/apk/alpha/release/*.apk
  build-app-ios-alpha:
    runs-on: macos-15 # MacOS version is pinned, because it determines which XCode version is used.
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup build environment
        uses: ./.github/actions/setup-build-environment
      - name: Decode binary environment secrets
        env:
          APPLE_DEVELOPMENT_CERTIFICATE: ${{ secrets.APPLE_DEVELOPMENT_CERTIFICATE }}
          APPLE_DEVELOPMENT_PROVISIONING_PROFILE: ${{ secrets.APPLE_DEVELOPMENT_PROVISIONING_PROFILE }}
        run: |
          mkdir -p ./fastlane/profiles
          echo $APPLE_DEVELOPMENT_CERTIFICATE | base64 --decode > ./fastlane/profiles/ios_development.p12
          echo $APPLE_DEVELOPMENT_PROVISIONING_PROFILE | base64 --decode > ./fastlane/profiles/development.mobileprovision
      - name: Build
        run: >
          bundle exec fastlane ios_build_app
          flavor:alpha
          certificate_path:profiles/ios_development.p12
          certificate_password:${{ secrets.APPLE_DEVELOPMENT_CERTIFICATE_PASSWORD }}
          provisioning_profile_path:profiles/development.mobileprovision
          code_signing_identity:"iPhone Developer"
      - uses: actions/upload-artifact@v4
        with:
          name: app-alpha-ios
          path: ./fastlane/build/*.ipa
  build-app-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: [alpha, beta]
        type: [apk, appbundle]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup build environment
        uses: ./.github/actions/setup-build-environment
      - name: Decode binary environment secrets
        env:
          ANDROID_DEVELOPMENT_SIGNING_KEYSTORE: ${{ secrets.ANDROID_DEVELOPMENT_SIGNING_KEYSTORE }}
        run: |
          mkdir -p ./fastlane/profiles
          echo $ANDROID_DEVELOPMENT_SIGNING_KEYSTORE | base64 --decode > ./fastlane/profiles/keystore.jks
      - name: Build
        run: >
          bundle exec fastlane android_build_${{ matrix.type }}
          flavor:${{ matrix.flavor }}
          keystore_path:profiles/keystore.jks
          key_alias:android-signing-development
          keystore_password:${{ secrets.ANDROID_DEVELOPMENT_SIGNING_KEYSTORE_PASSWORD }}
          key_password:${{ secrets.ANDROID_DEVELOPMENT_SIGNING_KEYSTORE_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.flavor }}-android-${{ matrix.type }}
          path: ./fastlane/build/*
